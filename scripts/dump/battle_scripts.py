from collections import namedtuple
from os import path, makedirs

from ndspy.narc import NARC

DECOMP_TEMPLATE = '''.nds
.thumb

.include "armips/include/battle_scrcmd.s"

.include "armips/include/abilities.s"
.include "armips/include/battle_consts.s"
.include "armips/include/battle_pokemon_params.s"
.include "armips/include/battle_subscr_def.s"
.include "armips/include/item_hold_effects.s"
.include "armips/include/moves.s"
.include "armips/include/types.s"


.create "build/battle/scr/{dump_folder}/{pl_prefix}_{index:03}.bin", 0

{prefix}_{index:03}:
{commands}

.close'''

CMD_TEMPLATE = '    {command} {params}'

Command = namedtuple('Command', 'name params')

CMD_DICT = [
    Command('SetEncounterEffects',              0),
    Command('SetPokemonForEncounter',           1),
    Command('PokemonSlideIn',                   1),
    Command('PokemonAppear',                    1),
    Command('PokemonReturn',                    1),
    Command('PokemonDelete',                    1),
    Command('SetTrainersForEncounter',          1),
    Command('Throw',                            2),
    Command('TrainerSlideOut',                  1),
    Command('TrainerSlideIn',                   2),
    Command('BattleInputSlideIn',               0),
    Command('HPGaugeSlideIn',                   1),
    Command('HPGaugeSlideWait',                 1),
    Command('HPGaugeSlideOut',                  1),
    Command('Wait',                             0),
    Command('DamageCalc',                       0),
    Command('DamageCalcMaximum',                0),
    Command('AttackMessage',                    0),
    Command('Message',                          2),
    Command('MessageNoBattler',                 2),
    Command('MessagePrepared',                  0),
    Command('PrepareMessage',                   2),
    Command('MessageWithBattler',               3),
    Command('PlayAnimation',                    1),
    Command('PlayAnimationAtoD',                3),
    Command('FlickerMon',                       1),
    Command('UpdateHP',                         1),
    Command('UpdateHPGauge',                    1),
    Command('TryFaintMon',                      1),
    Command('FaintAnimation',                   0),
    Command('WaitTime',                         1),
    Command('PlaySound',                        2),
    Command('If',                               4),
    Command('IfMonData',                        5),
    Command('FadeOut',                          0),
    Command('JumpTo',                           1),
    Command('JumpToMoveEffectScript',           0),
    Command('JumpToMoveScript',                 1),
    Command('CriticalCalc',                     0),
    Command('ShouldGetExp',                     1),
    Command('InitGetExp',                       0),
    Command('WaitExp',                          0),
    Command('ExpLoopback',                      1),
    Command('ShowMonList',                      0),
    Command('WaitForMonSelection',              0),
    Command('SwitchInAndUpdate',                1),
    Command('JumpIfAnySwitching',               1),
    Command('InitCapture',                      1),
    Command('Capture',                          0),
    Command('SetMultiHit',                      2),
    Command('SetVar',                           3),
    Command('StatBoostChange',                  3),
    Command('SetMonData',                       4),
    Command('ClearVolatileStatus',              2),
    Command('ToggleVanish',                     2),
    Command('CheckAbility',                     4),
    Command('Random',                           2),
    Command('SetVarFromVar',                    3),
    Command('SetMonDataFromVar',                4),
    Command('Branch',                           1),
    Command('CallSubscript',                    1),
    Command('CallSubscriptFromVar',             1),
    Command('SetMirrorMove',                    0),
    Command('ClearStatStages',                  0),
    Command('SetContinuation',                  1),
    Command('ClearContinuation',                1),
    Command('SetStatusIcon',                    2),
    Command('TrainerMessage',                   2),
    Command('CalcMoney',                        0),
    Command('SetStatusEffect',                  2),
    Command('SetStatusEffectMulti',             3),
    Command('SetStatusEffectFromVar',           2),
    Command('ReturnMessage',                    1),
    Command('SendOutMessage',                   1),
    Command('EncounterStartMessage',            1),
    Command('EncounterSendOutMessage',          1),
    Command('TrainerMessagePrepared',           1),
    Command('TryConversion',                    1),
    Command('JumpIf',                           4),
    Command('JumpIfMonData',                    5),
    Command('AddPayDayMoney',                   0),
    Command('SetLightScreen',                   1),
    Command('SetReflect',                       1),
    Command('SetMist',                          1),
    Command('TryOneHitKO',                      0),
    Command('DamageDiv',                        2),
    Command('DamageDivByVar',                   2),
    Command('TryMimic',                         1),
    Command('Metronome',                        0),
    Command('TryDisable',                       1),
    Command('Counter',                          0),
    Command('MirrorCoat',                       0),
    Command('TryEncore',                        1),
    Command('TryConversion2',                   1),
    Command('TrySketch',                        1),
    Command('TrySleepTalk',                     1),
    Command('FlailDamageCalc',                  0),
    Command('TrySpite',                         1),
    Command('HealBell',                         0),
    Command('TryThief',                         2),
    Command('TryProtect',                       1),
    Command('TrySubstitute',                    1),
    Command('TryWhirlwind',                     1),
    Command('Transform',                        0),
    Command('TrySpikes',                        1),
    Command('CheckSpikes',                      2),
    Command('TryPerishSong',                    1),
    Command('GetBattlerBySpeedOrder',           1),
    Command('JumpIfValidBattler',               2),
    Command('WeatherDamageCalc',                1),
    Command('RolloutDamageCalc',                0),
    Command('FuryCutterDamageCalc',             0),
    Command('TryAttract',                       1),
    Command('TrySafeguard',                     1),
    Command('TryPresent',                       1),
    Command('MagnitudeDamageCalc',              0),
    Command('TrySwitchInMon',                   3),
    Command('RapidSpin',                        0),
    Command('WeatherHPRecovery',                0),
    Command('HiddenPowerDamageCalc',            0),
    Command('PsychUp',                          0),
    Command('TryFutureSight',                   1),
    Command('CheckHit',                         4),
    Command('TryTeleport',                      1),
    Command('BeatUpDamageCalc',                 0),
    Command('FollowMe',                         0),
    Command('TryHelpingHand',                   1),
    Command('TryTrick',                         2),
    Command('TryWish',                          1),
    Command('TryAssist',                        1),
    Command('TrySetMagicCoat',                  1),
    Command('MagicCoat',                        0),
    Command('RevengeDamageCalc',                0),
    Command('TryBreakScreens',                  1),
    Command('TryYawn',                          1),
    Command('TryKnockOff',                      1),
    Command('EruptionDamageCalc',               0),
    Command('TryImprison',                      1),
    Command('TryGrudge',                        1),
    Command('TrySnatch',                        1),
    Command('LowKickDamageCalc',                0),
    Command('WeatherBallDamageCalc',            0),
    Command('TryPursuit',                       1),
    Command('ApplyTypeMultipliers',             0),
    Command('CheckOneTurnFlag',                 4),
    Command('SetOneTurnFlag',                   3),
    Command('GyroBallDamageCalc',               0),
    Command('MetalBurstDamageCalc',             1),
    Command('PaybackDamageCalc',                0),
    Command('TrumpCardDamageCalc',              0),
    Command('WringOutDamageCalc',               0),
    Command('TryMeFirst',                       1),
    Command('TryCopycat',                       1),
    Command('PunishmentDamageCalc',             0),
    Command('TrySuckerPunch',                   1),
    Command('CheckSideCondition',               4),
    Command('TryFeint',                         1),
    Command('TryPsychoShift',                   1),
    Command('TryLastResort',                    1),
    Command('TryToxicSpikes',                   1),
    Command('CheckToxicSpikes',                 2),
    Command('MoldBreakerAbilityCheck',          4),
    Command('CheckSameSide',                    3),
    Command('PickupItem',                       0),
    Command('TrickRoom',                        0),
    Command('CheckMoveMissed',                2),
    Command('CheckItemEffect',                  4),
    Command('GetItemEffect',                    2),
    Command('GetItemPower',                     2),
    Command('TryCamouflage',                    1),
    Command('NaturePower',                      0),
    Command('SecretPower',                      0),
    Command('TryNaturalGift',                   1),
    Command('TryPluck',                         2),
    Command('TryFling',                         1),
    Command('YesNoBox',                         1),
    Command('YesNoWait',                        2),
    Command('ShowPartyList',                    0),
    Command('WaitPartyList',                    1),
    Command('SetBattleResult',                  0),
    Command('CheckStealthRock',                 2),
    Command('CheckSecondaryEffectActivation',   1),
    Command('CheckChatterActivation',           1),
    Command('GetCurrentMoveData',               1),
    Command('Mosaic',                           3),
    Command('ChangeForm',                       1),
    Command('ChangeBackground',                 0),
    Command('RecoverStatus',                    1),
    Command('TryEscape',                        2),
    Command('ShowStartBallGauge',               1),
    Command('HideStartBallGauge',               1),
    Command('ShowBallGauge',                    1),
    Command('HideBallGauge',                    1),
    Command('LoadBallGaugeGraphics',            0),
    Command('FreeBallGaugeGraphics',            0),
    Command('IncGameStat',                      3),
    Command('TransformBack',                    1),
    Command('CheckAbilityEffectOnHit',          1),
    Command('SpriteToOAM',                      1),
    Command('OAMToSprite',                      1),
    Command('CheckWhiteOut',                    2),
    Command('TryAcupressure',                   1),
    Command('RemoveItem',                       1),
    Command('TryRecycle',                       1),
    Command('CheckItemEffectOnHit',             1),
    Command('BattleResultMessage',              0),
    Command('EscapeMessage',                    0),
    Command('GiveUpMessage',                    0),
    Command('CheckLeaveWith1HP',                1),
    Command('TryNaturalCure',                   2),
    Command('CheckSubstitute',                  2),
    Command('CheckCloudNine',                   1),
    Command('PickRandomOpponent',               1),
    Command('CheckUturnItemEffect',             1),
    Command('ChangeSpriteWeather',              1),
    Command('PlayMoveSoundEffect',              1),
    Command('PlayMusic',                        2),
    Command('CheckSafariDone',                  1),
    Command('WaitFrames',                       1),
    Command('CheckMoveIsType',                  2),
    Command('GetBaseStatsData',                 3),
    Command('RefreshMonData',                   1),
    Command('End',                              0),
]

BATTLER_CONSTS = {
    0: 'BATTLER_ALL',
    1: 'BATTLER_ATTACKER',
    2: 'BATTLER_DEFENDER',
    3: 'BATTLER_ME',
    4: 'BATTLER_ENEMY',
    5: 'BATTLER_FAINTING',
    6: 'BATTLER_SWITCHING',
    7: 'BATTLER_EFFECT_TARGET',
    8: 'BATTLER_ABILITYSRC',
    9: 'BATTLER_ME_SLOT_1',
    10: 'BATTLER_ENEMY_SLOT_1',
    11: 'BATTLER_ME_SLOT_2',
    12: 'BATTLER_ENEMY_SLOT_2',
    14: 'BATTLER_ATTACKER_WORK',
    15: 'BATTLER_DEFENDER_WORK',
    16: 'BATTLER_ATTACKER_PARTNER',
    17: 'BATTLER_DEFENDER_PARTNER',
    18: 'BATTLER_FORCED_OUT',
    19: 'BATTLER_ATTACKER_ENEMY',
    20: 'BATTLER_DEFENDER_ENEMY',
    21: 'BATTLER_CLIENT_WORK',
    22: 'BATTLER_AFTER_SWITCHING',
    0xFF: 'BATTLER_WORKING',
}

BATTLER_PARAMS = {
    'SetPokemonForEncounter': 0,
    'PokemonSlideIn': 0,
    'PokemonAppear': 0,
    'PokemonReturn': 0,
    'PokemonDelete': 0,
    'SetTrainersForEncounter': 0,
    'Throw': 0,
    'PrepareTrainerSlide': 0,
    'TrainerSlideIn': 0,
    'HPGaugeSlideIn': 0,
    'HPGaugeSlideWait': 0,
    'HPGaugeSlideOut': 0,
    'MessageWithBattler': 0,
    'PlayAnimation': 0,
    'PlayAnimationAtoD': 0,
    'FlickerMon': 0,
    'UpdateHP': 0,
    'UpdateHPGauge': 0,
    'TryFaintMon': 0,
    'PlaySound': 0,
    'IfMonData': 1,
    'SwitchInAndUpdate': 0,
    'SetMonData': 1,
    'CheckAbility': 1,
    'SetContinuation': 0,
    'ClearContinuation': 0,
    'SetStatusIcon': 0,
    'TrainerMessage': 0,
    'SetStatusEffect': 0,
    'SetStatusEffectMulti': [0, 1],
    'SetStatusEffectFromVar': 0,
    'ReturnMessage': 0,
    'SendOutMessage': 0,
    'EncounterStartMessage': 0,
    'EncounterSendOutMessage': 0,
    'TrainerMessagePrepared': 0,
    'JumpIfMonData': 1,
    'CheckSpikes': 0,
    'WeatherDamageCalc': 0,
    'TrySwitchInMon': 0,
    'CheckHit': [0, 1],
    'CheckOneTurnFlag': 0,
    'SetOneTurnFlag': 0,
    'CheckSideCondition': 0,
    'CheckToxicSpikes': 0,
    'MoldBreakerAbilityCheck': 1,
    'CheckSameSide': [0, 1],
    'CheckMoveMissed': 0,
    'CheckItemEffect': 1,
    'GetItemEffect': 0,
    'GetItemPower': 0,
    'CheckStealthRock': 0,
    'Mosaic': 0,
    'ChangeForm': 0,
    'RecoverStatus': 0,
    'TryEscape': 0,
    'ShowStartBallGauge': 0,
    'HideStartBallGauge': 0,
    'ShowBallGauge': 0,
    'HideBallGauge': 0,
    'IncGameStat': 0,
    'TransformBack': 0,
    'SpriteToOAM': 0,
    'OAMToSprite': 0,
    'CheckWhiteOut': 0,
    'RemoveItem': 0,
    'CheckLeaveWith1HP': 0,
    'TryNaturalCure': 0,
    'CheckSubstitute': 0,
    'PickRandomOpponent': 0,
    'ChangeSpriteWeather': 0,
    'PlayMoveSoundEffect': 0,
    'PlayMusic': 0,
    'RefreshMonData': 0,
}

MODE_CONSTS = [
    'MODE_HAVE',
    'MODE_NOT_HAVE',
]

MODE_PARAMS = {
    'CheckAbility': 0,
    'MoldBreakerAbilityCheck': 0,
    'CheckItemEffect': 0,
}

OPERATOR_CONSTS = [
    'EQUAL',
    'NOT_EQUAL',
    'GREATER',
    'LESSER',
    'FLAG_EQ',
    'FLAG_NEQ',
    'FLAG_AND',
    'OP_SET',
    'OP_ADD',
    'OP_SUB',
    'OP_SET_FLAG',
    'OP_CLEAR_FLAG',
    'OP_MUL',
    'OP_DIV',
    'OP_LSH',
    'OP_RSH',
    'OP_TO_BIT',
    'OP_GET',
    'OP_SUB_TO_ZERO',
    'OP_XOR',
    'OP_AND',
]

OPERATOR_PARAMS = {
    'SetVar': 0,
    'SetMonData': 0,
    'SetVarFromVar': 0,
    'SetMonDataFromVar': 0,
    'JumpIf': 0,
    'JumpIfMonData': 0,
}

CONDITION_PARAMS = {
    'If': 0,
    'IfMonData': 0,
}

VARIABLE_CONSTS = [
    'VAR_BATTLE_TYPE',
    'VAR_CRITICAL_CHANCE',
    'VAR_ADD_STATUS_DIRECT',
    'VAR_ADD_STATUS_INDIRECT',
    'VAR_ADD_STATUS_ABILITY',
    'VAR_EFFECT_TYPE',
    'VAR_SERVER_STATUS_FLAG',
    'VAR_FIELD_CONDITIONS',
    'VAR_DAMAGE_MULTI',
    'VAR_CALC_WORK',
    'VAR_MOVE_STATUS_FLAG',
    'VAR_ATTACKER_SIDE_CONDITIONS',
    'VAR_DEFENDER_SIDE_CONDITIONS',
    'VAR_EFFECT_TARGET_SIDE_CONDITIONS',
    'VAR_DAMAGE',
    'VAR_ATTACKER',
    'VAR_DEFENDER',
    'VAR_EFFECT_TARGET',
    'VAR_FAINTED_BATTLER',
    'VAR_SWITCHED_BATTLER',
    'VAR_BATTLER_WORK',
    'VAR_BIDE_DAMAGE',
    'VAR_PREPARED_MESSAGE',
    'VAR_MONEY',
    'VAR_CURRENT_MOVE',
    'VAR_TURNS',
    'VAR_ATTACKER_WORK',
    'VAR_DEFENDER_WORK',
    'VAR_MOVE_NUM_WORK',
    'VAR_PUSH_CLIENT',
    'VAR_DAMAGE_POWER',
    'VAR_SWOAM_TYPE',
    'VAR_HP_TEMP',
    'VAR_BATTLE_RESULT',
    'VAR_EFFECT_PARAMS',
    'VAR_MOVE_TEMP',
    'VAR_ITEM_TEMP',
    'VAR_ABILITY_TEMP',
    'VAR_WEATHER_COUNT',
    'VAR_NTH_BATTLER_BY_SPEED',
    'VAR_IS_MULTIHIT',
    'VAR_PHYSICAL_DAMAGE',
    'VAR_SPECIAL_DAMAGE',
    'VAR_TEMP_WORK',
    'VAR_WAS_MOVE_CRITICAL',
    'VAR_LAST_DAMAGING_ATTACKER',
    'VAR_LAST_DAMAGING_DEFENDER',
    'VAR_ATTACKER_ONE_TURN_STATUS_FLAGS',
    'VAR_DEFENDER_ONE_TURN_STATUS_FLAGS',
    'VAR_EFFECT_TARGET_ONE_TURN_STATUS_FLAGS',
    'VAR_FLING_TEMP',
    'VAR_FLING_SUBSCRIPT',
    'VAR_BATTLE_STATUS_FLAG',
    'VAR_MOVE_CONTINUATION',
    'VAR_HIT_DAMAGE',
    'VAR_SAFARI_BALL_COUNT',
    'VAR_SWITCHED_BATTLER_TEMP',
    'VAR_MOVE_TYPE',
    'VAR_MOVE_EFFECT',
    'VAR_RULESET',
    'VAR_SERVER_STATUS_FLAG2',
    'VAR_SPEED_COUNT',
    'VAR_CLIENT_SET_MAX',
    'VAR_ATTACKER_TEMP',
    'VAR_DEFENDER_TEMP',
    'VAR_DEFENDER_ONE_TURN_PHYSICAL_DAMAGE',
    'VAR_ATTACKER_ASSURANCE_DAMAGE',
    'VAR_DEFENDER_ASSURANCE_DAMAGE',
    'VAR_ATTACKER_SHELL_BELL_DAMAGE',
    'VAR_CLIENT_WORKING_COUNT',
]

VARIABLE_PARAMS = {
    'SetVar': 1,
    'SetVarFromVar': [1, 2],
    'SetMonDataFromVar': 3,
    'CallSubscriptFromVar': 0,
    'SetStatusEffectFromVar': 1,
    'JumpIf': [1, 2],
    'JumpIfMonData': 3,
    'DamageDiv': 0,
    'DamageDivByVar': [0, 1],
    'GetBattlerBySpeedOrder': 0,
    'JumpIfValidBattler': 0,
    'GetItemEffect': 1,
    'GetItemPower': 1,
    'If': 1,
}

OTF_CONSTS = [
    'OTF_STRUGGLING',
    'OTF_PP_DECREMENT',
    'OTF_PROTECTED',
    'OTF_HELPING_HAND',
    'OTF_MAGIC_COAT',
    'OTF_SNATCHING',
    'OTF_ROOSTING',
    'OTF_FLEEING',
    'OTF_ENDURING',
]

OTF_PARAMS = {
    'CheckOneTurnFlag': 1,
}

SIDE_CONDITION_MODE_CONSTS = [
    'SIDE_CONDITION_MODE_CHECK_OFF',
    'SIDE_CONDITION_MODE_CHECK_ON',
    'SIDE_CONDITION_MODE_CLEAR'
]

SIDE_CONDITION_MODE_PARAMS = {
    'CheckSideCondition': 1,
}

SIDE_CONDITION_CONSTS = [
    'SIDE_CONDITION_LIGHT_SCREEN_COUNT',
    'SIDE_CONDITION_REFLECT_COUNT',
    'SIDE_CONDITION_MIST_COUNT',
    'SIDE_CONDITION_SAFEGUARD_COUNT',
    'SIDE_CONDITION_SPIKES_COUNT',
    'SIDE_CONDITION_TOXIC_SPIKES_COUNT',
]

SIDE_CONDITION_PARAMS = {
    'CheckSideCondition': 2,
}

YES_NO_BOX_CONSTS = [
    'YES_NO_BASIC',
    'YES_NO_FORGET_MOVE',
    'YES_NO_GIVE_UP_ON_MOVE',
    'YES_NO_NEXT_MON',
    'YES_NO_CHANGE_MON',
    'YES_NO_GIVE_NICKNAME',
]

YES_NO_BOX_PARAMS = {
    'YesNoBox': 0,
}

THROW_CONSTS = [
    'THROW_POKE_BALL',
    'THROW_SAFARI_BALL',
    'THROW_SAFARI_ROCK',
    'THROW_SAFARI_BAIT',
    'THROW_PARK_BALL',
]

THROW_PARAMS = {
    'Throw': 1,
}

POS_CONSTS = [
    'POS_SINGLES_PLAYER',
    'POS_SINGLES_ENEMY',
    'POS_DOUBLES_PLAYER',
    'POS_DOUBLES_PARTNER',
    'POS_DOUBLES_ENEMY_1',
    'POS_DOUBLES_ENEMY_2',
]

POS_PARAMS = {
    'TrainerSlideIn': 1,
}

TAG_CONSTS = [
    'TAG_NONE',
    'TAG_NONE_DIR',
    'TAG_NICK',
    'TAG_MOVE',
    'TAG_STAT',
    'TAG_ITEM',
    'TAG_NUM',
    'TAG_NUMS',
    'TAG_TRNAME',
    'TAG_NICK_NICK',
    'TAG_NICK_MOVE',
    'TAG_NICK_ABILITY',
    'TAG_NICK_STAT',
    'TAG_NICK_TYPE',
    'TAG_NICK_POKE',
    'TAG_NICK_ITEM',
    'TAG_NICK_PLOC',
    'TAG_NICK_NUM',
    'TAG_NICK_TRNAME',
    'TAG_NICK_BOX',
    'TAG_MOVE_DIR',
    'TAG_MOVE_NICK',
    'TAG_MOVE_MOVE',
    'TAG_ABILITY_NICK',
    'TAG_ITEM_MOVE',
    'TAG_NUM_NUM',
    'TAG_TRNAME_TRNAME',
    'TAG_TRNAME_NICK',
    'TAG_TRNAME_ITEM',
    'TAG_TRNAME_NUM',
    'TAG_TRTYPE_TRNAME',
    'TAG_NICK_NICK_MOVE',
    'TAG_NICK_NICK_ABILITY',
    'TAG_NICK_NICK_ITEM',
    'TAG_NICK_MOVE_MOVE',
    'TAG_NICK_MOVE_NUM',
    'TAG_NICK_ABILITY_NICK',
    'TAG_NICK_ABILITY_MOVE',
    'TAG_NICK_ABILITY_ITEM',
    'TAG_NICK_ABILITY_STAT',
    'TAG_NICK_ABILITY_TYPE',
    'TAG_NICK_ABILITY_COND',
    'TAG_NICK_ABILITY_NUM',
    'TAG_NICK_ITEM_NICK',
    'TAG_NICK_ITEM_MOVE',
    'TAG_NICK_ITEM_STAT',
    'TAG_NICK_ITEM_COND',
    'TAG_NICK_BOX_BOX',
    'TAG_ITEM_NICK_TASTE',
    'TAG_TRNAME_NICK_NICK',
    'TAG_TRTYPE_TRNAME_NICK',
    'TAG_TRTYPE_TRNAME_ITEM',
    'TAG_NICK_ABILITY_NICK_MOVE',
    'TAG_NICK_ABILITY_NICK_ABILITY',
    'TAG_NICK_ABILITY_NICK_STAT',
    'TAG_NICK_ITEM_NICK_ITEM',
    'TAG_TRNAME_NICK_TRNAME_NICK',
    'TAG_TRTYPE_TRNAME_NICK_NICK',
    'TAG_TRTYPE_TRNAME_NICK_TRNAME',
    'TAG_TRTYPE_TRNAME_TRTYPE_TRNAME',
    'TAG_TRTYPE_TRNAME_NICKx2',
]

TAG_PARAMS = {
    'Message': 1,
    'MessageNoBattler': 1,
    'PrepareMessage': 1,
    'MessageWithBattler': 2
}

CAPTURE_CONSTS = [
    'CAPTURE_NORMAL',
    'CAPTURE_SAFARI',
]

CAPTURE_PARAMS = {
    'InitCapture': 0,
}

MULTI_HIT_CONSTS = {
    253: 'MULTI_HIT_FLAGS',
    221: 'TRIPLE_KICK_FLAGS',
}

MULTI_HIT_PARAMS = {
    'SetMultiHit': 1,
}

BATTLE_MON_CONSTS = [
    'BATTLE_MON_SPECIES',
    'BATTLE_MON_ATTACK',
    'BATTLE_MON_DEFENSE',
    'BATTLE_MON_SPEED',
    'BATTLE_MON_SPATK',
    'BATTLE_MON_SPDEF',
    'BATTLE_MON_MOVE_1',
    'BATTLE_MON_MOVE_2',
    'BATTLE_MON_MOVE_3',
    'BATTLE_MON_MOVE_4',
    'BATTLE_MON_HP_IV',
    'BATTLE_MON_ATK_IV',
    'BATTLE_MON_DEF_IV',
    'BATTLE_MON_SPE_IV',
    'BATTLE_MON_SPA_IV',
    'BATTLE_MON_SPD_IV',
    'BATTLE_MON_IS_EGG',
    'BATTLE_MON_HAS_NICKNAME',
    'BATTLE_MON_HP_STAGE',
    'BATTLE_MON_ATK_STAGE',
    'BATTLE_MON_DEF_STAGE',
    'BATTLE_MON_SPE_STAGE',
    'BATTLE_MON_SPA_STAGE',
    'BATTLE_MON_SPD_STAGE',
    'BATTLE_MON_ACC_STAGE',
    'BATTLE_MON_EVA_STAGE',
    'BATTLE_MON_ABILITY',
    'BATTLE_MON_TYPE_1',
    'BATTLE_MON_TYPE_2',
    'BATTLE_MON_GENDER',
    'BATTLE_MON_IS_SHINY',
    'BATTLE_MON_PP_CUR_1',
    'BATTLE_MON_PP_CUR_2',
    'BATTLE_MON_PP_CUR_3',
    'BATTLE_MON_PP_CUR_4',
    'BATTLE_MON_PP_UPS_1',
    'BATTLE_MON_PP_UPS_2',
    'BATTLE_MON_PP_UPS_3',
    'BATTLE_MON_PP_UPS_4',
    'BATTLE_MON_PP_MAX_1',
    'BATTLE_MON_PP_MAX_2',
    'BATTLE_MON_PP_MAX_3',
    'BATTLE_MON_PP_MAX_4',
    'BATTLE_MON_LEVEL',
    'BATTLE_MON_FRIENDSHIP',
    'BATTLE_MON_NICKNAME',
    'BATTLE_MON_NICKNAME_CHARS',
    'BATTLE_MON_HP',
    'BATTLE_MON_MAX_HP',
    'BATTLE_MON_OT_NAME',
    'BATTLE_MON_EXP',
    'BATTLE_MON_PID',
    'BATTLE_MON_CONDITION',
    'BATTLE_MON_CONDITION_2',
    'BATTLE_MON_OT_ID',
    'BATTLE_MON_HELD_ITEM',
    'BATTLE_MON_HIT_COUNT',
    'BATTLE_MON_MESSAGE_FLAG',
    'BATTLE_MON_OT_GENDER',
    'BATTLE_MON_MOVE_EFFECTS',
    'BATTLE_MON_MOVE_EFFECTS_TEMP',
    'BATTLE_MON_DISABLED_TURNS',
    'BATTLE_MON_ENCORED_TURNS',
    'BATTLE_MON_CHARGED_TURNS',
    'BATTLE_MON_TAUNTED_TURNS',
    'BATTLE_MON_PROTECT_CHAIN',
    'BATTLE_MON_PERISH_SONG_TURNS',
    'BATTLE_MON_ROLLOUT_CHAIN',
    'BATTLE_MON_FURY_CUTTER_CHAIN',
    'BATTLE_MON_STOCKPILE_COUNT',
    'BATTLE_MON_STOCKPILE_DEF_BOOSTS',
    'BATTLE_MON_STOCKPILE_SPD_BOOSTS',
    'BATTLE_MON_TRUANT_ACTIVE',
    'BATTLE_MON_FLASH_FIRE_ACTIVE',
    'BATTLE_MON_LOCKED_ON_BY',
    'BATTLE_MON_MIMIC_MOVE_SLOT',
    'BATTLE_MON_BOUND_TARGET',
    'BATTLE_MON_MEAN_LOOKED_BY',
    'BATTLE_MON_LAST_RESORT_MASK',
    'BATTLE_MON_MAGNET_RISE_TURNS',
    'BATTLE_MON_HEAL_BLOCK_TURNS',
    'BATTLE_MON_EMBARGO_TURNS',
    'BATTLE_MON_UNBURDEN_ACTIVE',
    'BATTLE_MON_METRONOME',
    'BATTLE_MON_TEMP_ACC_MAX',
    'BATTLE_MON_TEMP_SPE_MAX',
    'BATTLE_MON_QUICK_CLAW_ACTIVE',
    'BATTLE_MON_ME_FIRST_ACTIVE',
    'BATTLE_MON_FAKE_OUT_TURNS',
    'BATTLE_MON_SLOW_START_TURNS',
    'BATTLE_MON_SUBSTITUTE_HP',
    'BATTLE_MON_FORM_RAND',
    'BATTLE_MON_DISABLED_MOVE',
    'BATTLE_MON_ENCORED_MOVE',
    'BATTLE_MON_BINDING_MOVE',
    'BATTLE_MON_ITEM_HP_RESTORED',
    'BATTLE_MON_SLOW_START_ACTIVE',
    'BATTLE_MON_SLOW_START_ENDED',
    'BATTLE_MON_FORM_NUMBER',
    '',
    'BATTLE_MON_TEMP_WORK',
]

BATTLE_MON_PARAMS = {
    'IfMonData': 2,
    'SetMonData': 2,
    'JumpIfMonData': 2,
    'SetMonDataFromVar': 2,
}

ABILITY_CONSTS = [
    'ABILITY_NONE',
    'ABILITY_STENCH',
    'ABILITY_DRIZZLE',
    'ABILITY_SPEED_BOOST',
    'ABILITY_BATTLE_ARMOR',
    'ABILITY_STURDY',
    'ABILITY_DAMP',
    'ABILITY_LIMBER',
    'ABILITY_SAND_VEIL',
    'ABILITY_STATIC',
    'ABILITY_VOLT_ABSORB',
    'ABILITY_WATER_ABSORB',
    'ABILITY_OBLIVIOUS',
    'ABILITY_CLOUD_NINE',
    'ABILITY_COMPOUND_EYES',
    'ABILITY_INSOMNIA',
    'ABILITY_COLOR_CHANGE',
    'ABILITY_IMMUNITY',
    'ABILITY_FLASH_FIRE',
    'ABILITY_SHIELD_DUST',
    'ABILITY_OWN_TEMPO',
    'ABILITY_SUCTION_CUPS',
    'ABILITY_INTIMIDATE',
    'ABILITY_SHADOW_TAG',
    'ABILITY_ROUGH_SKIN',
    'ABILITY_WONDER_GUARD',
    'ABILITY_LEVITATE',
    'ABILITY_EFFECT_SPORE',
    'ABILITY_SYNCHRONIZE',
    'ABILITY_CLEAR_BODY',
    'ABILITY_NATURAL_CURE',
    'ABILITY_LIGHTNING_ROD',
    'ABILITY_SERENE_GRACE',
    'ABILITY_SWIFT_SWIM',
    'ABILITY_CHLOROPHYLL',
    'ABILITY_ILLUMINATE',
    'ABILITY_TRACE',
    'ABILITY_HUGE_POWER',
    'ABILITY_POISON_POINT',
    'ABILITY_INNER_FOCUS',
    'ABILITY_MAGMA_ARMOR',
    'ABILITY_WATER_VEIL',
    'ABILITY_MAGNET_PULL',
    'ABILITY_SOUNDPROOF',
    'ABILITY_RAIN_DISH',
    'ABILITY_SAND_STREAM',
    'ABILITY_PRESSURE',
    'ABILITY_THICK_FAT',
    'ABILITY_EARLY_BIRD',
    'ABILITY_FLAME_BODY',
    'ABILITY_RUN_AWAY',
    'ABILITY_KEEN_EYE',
    'ABILITY_HYPER_CUTTER',
    'ABILITY_PICKUP',
    'ABILITY_TRUANT',
    'ABILITY_HUSTLE',
    'ABILITY_CUTE_CHARM',
    'ABILITY_PLUS',
    'ABILITY_MINUS',
    'ABILITY_FORECAST',
    'ABILITY_STICKY_HOLD',
    'ABILITY_SHED_SKIN',
    'ABILITY_GUTS',
    'ABILITY_MARVEL_SCALE',
    'ABILITY_LIQUID_OOZE',
    'ABILITY_OVERGROW',
    'ABILITY_BLAZE',
    'ABILITY_TORRENT',
    'ABILITY_SWARM',
    'ABILITY_ROCK_HEAD',
    'ABILITY_DROUGHT',
    'ABILITY_ARENA_TRAP',
    'ABILITY_VITAL_SPIRIT',
    'ABILITY_WHITE_SMOKE',
    'ABILITY_PURE_POWER',
    'ABILITY_SHELL_ARMOR',
    'ABILITY_AIR_LOCK',
    'ABILITY_TANGLED_FEET',
    'ABILITY_MOTOR_DRIVE',
    'ABILITY_RIVALRY',
    'ABILITY_STEADFAST',
    'ABILITY_SNOW_CLOAK',
    'ABILITY_GLUTTONY',
    'ABILITY_ANGER_POINT',
    'ABILITY_UNBURDEN',
    'ABILITY_HEATPROOF',
    'ABILITY_SIMPLE',
    'ABILITY_DRY_SKIN',
    'ABILITY_DOWNLOAD',
    'ABILITY_IRON_FIST',
    'ABILITY_POISON_HEAL',
    'ABILITY_ADAPTABILITY',
    'ABILITY_SKILL_LINK',
    'ABILITY_HYDRATION',
    'ABILITY_SOLAR_POWER',
    'ABILITY_QUICK_FEET',
    'ABILITY_NORMALIZE',
    'ABILITY_SNIPER',
    'ABILITY_MAGIC_GUARD',
    'ABILITY_NO_GUARD',
    'ABILITY_STALL',
    'ABILITY_TECHNICIAN',
    'ABILITY_LEAF_GUARD',
    'ABILITY_KLUTZ',
    'ABILITY_MOLD_BREAKER',
    'ABILITY_SUPER_LUCK',
    'ABILITY_AFTERMATH',
    'ABILITY_ANTICIPATION',
    'ABILITY_FOREWARN',
    'ABILITY_UNAWARE',
    'ABILITY_TINTED_LENS',
    'ABILITY_FILTER',
    'ABILITY_SLOW_START',
    'ABILITY_SCRAPPY',
    'ABILITY_STORM_DRAIN',
    'ABILITY_ICE_BODY',
    'ABILITY_SOLID_ROCK',
    'ABILITY_SNOW_WARNING',
    'ABILITY_HONEY_GATHER',
    'ABILITY_FRISK',
    'ABILITY_RECKLESS',
    'ABILITY_MULTITYPE',
    'ABILITY_FLOWER_GIFT',
    'ABILITY_BAD_DREAMS',
]

ABILITY_PARAMS = {
    'CheckAbility': 2,
    'MoldBreakerAbilityCheck': 2,
}

STATUS_CONSTS = [
    'STATUS_NONE',
    'STATUS_ASLEEP',
    'STATUS_POISONED',
    'STATUS_BURNED',
    'STATUS_FROZEN',
    'STATUS_PARALYZED',
]

STATUS_PARAMS = {
    'SetStatusIcon': 1,
}

TRAINER_MESSAGE_CONSTS = {
    1: 'TRAINER_MESSAGE_LOSE',
    4: 'TRAINER_MESSAGE_LOSE_1',
    8: 'TRAINER_MESSAGE_LOSE_2',
    100: 'TRAINER_MESSAGE_WIN',
}

TRAINER_MESSAGE_PARAMS = {
    'TrainerMessage': 1
}

MOVE_ID_CONSTS = [
    'MOVE_NONE',
    'MOVE_POUND',
    'MOVE_KARATE_CHOP',
    'MOVE_DOUBLE_SLAP',
    'MOVE_COMET_PUNCH',
    'MOVE_MEGA_PUNCH',
    'MOVE_PAY_DAY',
    'MOVE_FIRE_PUNCH',
    'MOVE_ICE_PUNCH',
    'MOVE_THUNDER_PUNCH',
    'MOVE_SCRATCH',
    'MOVE_VISE_GRIP',
    'MOVE_GUILLOTINE',
    'MOVE_RAZOR_WIND',
    'MOVE_SWORDS_DANCE',
    'MOVE_CUT',
    'MOVE_GUST',
    'MOVE_WING_ATTACK',
    'MOVE_WHIRLWIND',
    'MOVE_FLY',
    'MOVE_BIND',
    'MOVE_SLAM',
    'MOVE_VINE_WHIP',
    'MOVE_STOMP',
    'MOVE_DOUBLE_KICK',
    'MOVE_MEGA_KICK',
    'MOVE_JUMP_KICK',
    'MOVE_ROLLING_KICK',
    'MOVE_SAND_ATTACK',
    'MOVE_HEADBUTT',
    'MOVE_HORN_ATTACK',
    'MOVE_FURY_ATTACK',
    'MOVE_HORN_DRILL',
    'MOVE_TACKLE',
    'MOVE_BODY_SLAM',
    'MOVE_WRAP',
    'MOVE_TAKE_DOWN',
    'MOVE_THRASH',
    'MOVE_DOUBLE_EDGE',
    'MOVE_TAIL_WHIP',
    'MOVE_POISON_STING',
    'MOVE_TWINEEDLE',
    'MOVE_PIN_MISSILE',
    'MOVE_LEER',
    'MOVE_BITE',
    'MOVE_GROWL',
    'MOVE_ROAR',
    'MOVE_SING',
    'MOVE_SUPERSONIC',
    'MOVE_SONIC_BOOM',
    'MOVE_DISABLE',
    'MOVE_ACID',
    'MOVE_EMBER',
    'MOVE_FLAMETHROWER',
    'MOVE_MIST',
    'MOVE_WATER_GUN',
    'MOVE_HYDRO_PUMP',
    'MOVE_SURF',
    'MOVE_ICE_BEAM',
    'MOVE_BLIZZARD',
    'MOVE_PSYBEAM',
    'MOVE_BUBBLE_BEAM',
    'MOVE_AURORA_BEAM',
    'MOVE_HYPER_BEAM',
    'MOVE_PECK',
    'MOVE_DRILL_PECK',
    'MOVE_SUBMISSION',
    'MOVE_LOW_KICK',
    'MOVE_COUNTER',
    'MOVE_SEISMIC_TOSS',
    'MOVE_STRENGTH',
    'MOVE_ABSORB',
    'MOVE_MEGA_DRAIN',
    'MOVE_LEECH_SEED',
    'MOVE_GROWTH',
    'MOVE_RAZOR_LEAF',
    'MOVE_SOLAR_BEAM',
    'MOVE_POISON_POWDER',
    'MOVE_STUN_SPORE',
    'MOVE_SLEEP_POWDER',
    'MOVE_PETAL_DANCE',
    'MOVE_STRING_SHOT',
    'MOVE_DRAGON_RAGE',
    'MOVE_FIRE_SPIN',
    'MOVE_THUNDER_SHOCK',
    'MOVE_THUNDERBOLT',
    'MOVE_THUNDER_WAVE',
    'MOVE_THUNDER',
    'MOVE_ROCK_THROW',
    'MOVE_EARTHQUAKE',
    'MOVE_FISSURE',
    'MOVE_DIG',
    'MOVE_TOXIC',
    'MOVE_CONFUSION',
    'MOVE_PSYCHIC',
    'MOVE_HYPNOSIS',
    'MOVE_MEDITATE',
    'MOVE_AGILITY',
    'MOVE_QUICK_ATTACK',
    'MOVE_RAGE',
    'MOVE_TELEPORT',
    'MOVE_NIGHT_SHADE',
    'MOVE_MIMIC',
    'MOVE_SCREECH',
    'MOVE_DOUBLE_TEAM',
    'MOVE_RECOVER',
    'MOVE_HARDEN',
    'MOVE_MINIMIZE',
    'MOVE_SMOKESCREEN',
    'MOVE_CONFUSE_RAY',
    'MOVE_WITHDRAW',
    'MOVE_DEFENSE_CURL',
    'MOVE_BARRIER',
    'MOVE_LIGHT_SCREEN',
    'MOVE_HAZE',
    'MOVE_REFLECT',
    'MOVE_FOCUS_ENERGY',
    'MOVE_BIDE',
    'MOVE_METRONOME',
    'MOVE_MIRROR_MOVE',
    'MOVE_SELF_DESTRUCT',
    'MOVE_EGG_BOMB',
    'MOVE_LICK',
    'MOVE_SMOG',
    'MOVE_SLUDGE',
    'MOVE_BONE_CLUB',
    'MOVE_FIRE_BLAST',
    'MOVE_WATERFALL',
    'MOVE_CLAMP',
    'MOVE_SWIFT',
    'MOVE_SKULL_BASH',
    'MOVE_SPIKE_CANNON',
    'MOVE_CONSTRICT',
    'MOVE_AMNESIA',
    'MOVE_KINESIS',
    'MOVE_SOFT_BOILED',
    'MOVE_HI_JUMP_KICK',
    'MOVE_GLARE',
    'MOVE_DREAM_EATER',
    'MOVE_POISON_GAS',
    'MOVE_BARRAGE',
    'MOVE_LEECH_LIFE',
    'MOVE_LOVELY_KISS',
    'MOVE_SKY_ATTACK',
    'MOVE_TRANSFORM',
    'MOVE_BUBBLE',
    'MOVE_DIZZY_PUNCH',
    'MOVE_SPORE',
    'MOVE_FLASH',
    'MOVE_PSYWAVE',
    'MOVE_SPLASH',
    'MOVE_ACID_ARMOR',
    'MOVE_CRABHAMMER',
    'MOVE_EXPLOSION',
    'MOVE_FURY_SWIPES',
    'MOVE_BONEMERANG',
    'MOVE_REST',
    'MOVE_ROCK_SLIDE',
    'MOVE_HYPER_FANG',
    'MOVE_SHARPEN',
    'MOVE_CONVERSION',
    'MOVE_TRI_ATTACK',
    'MOVE_SUPER_FANG',
    'MOVE_SLASH',
    'MOVE_SUBSTITUTE',
    'MOVE_STRUGGLE',
    'MOVE_SKETCH',
    'MOVE_TRIPLE_KICK',
    'MOVE_THIEF',
    'MOVE_SPIDER_WEB',
    'MOVE_MIND_READER',
    'MOVE_NIGHTMARE',
    'MOVE_FLAME_WHEEL',
    'MOVE_SNORE',
    'MOVE_CURSE',
    'MOVE_FLAIL',
    'MOVE_CONVERSION_2',
    'MOVE_AEROBLAST',
    'MOVE_COTTON_SPORE',
    'MOVE_REVERSAL',
    'MOVE_SPITE',
    'MOVE_POWDER_SNOW',
    'MOVE_PROTECT',
    'MOVE_MACH_PUNCH',
    'MOVE_SCARY_FACE',
    'MOVE_FEINT_ATTACK',
    'MOVE_SWEET_KISS',
    'MOVE_BELLY_DRUM',
    'MOVE_SLUDGE_BOMB',
    'MOVE_MUD_SLAP',
    'MOVE_OCTAZOOKA',
    'MOVE_SPIKES',
    'MOVE_ZAP_CANNON',
    'MOVE_FORESIGHT',
    'MOVE_DESTINY_BOND',
    'MOVE_PERISH_SONG',
    'MOVE_ICY_WIND',
    'MOVE_DETECT',
    'MOVE_BONE_RUSH',
    'MOVE_LOCK_ON',
    'MOVE_OUTRAGE',
    'MOVE_SANDSTORM',
    'MOVE_GIGA_DRAIN',
    'MOVE_ENDURE',
    'MOVE_CHARM',
    'MOVE_ROLLOUT',
    'MOVE_FALSE_SWIPE',
    'MOVE_SWAGGER',
    'MOVE_MILK_DRINK',
    'MOVE_SPARK',
    'MOVE_FURY_CUTTER',
    'MOVE_STEEL_WING',
    'MOVE_MEAN_LOOK',
    'MOVE_ATTRACT',
    'MOVE_SLEEP_TALK',
    'MOVE_HEAL_BELL',
    'MOVE_RETURN',
    'MOVE_PRESENT',
    'MOVE_FRUSTRATION',
    'MOVE_SAFEGUARD',
    'MOVE_PAIN_SPLIT',
    'MOVE_SACRED_FIRE',
    'MOVE_MAGNITUDE',
    'MOVE_DYNAMIC_PUNCH',
    'MOVE_MEGAHORN',
    'MOVE_DRAGON_BREATH',
    'MOVE_BATON_PASS',
    'MOVE_ENCORE',
    'MOVE_PURSUIT',
    'MOVE_RAPID_SPIN',
    'MOVE_SWEET_SCENT',
    'MOVE_IRON_TAIL',
    'MOVE_METAL_CLAW',
    'MOVE_VITAL_THROW',
    'MOVE_MORNING_SUN',
    'MOVE_SYNTHESIS',
    'MOVE_MOONLIGHT',
    'MOVE_HIDDEN_POWER',
    'MOVE_CROSS_CHOP',
    'MOVE_TWISTER',
    'MOVE_RAIN_DANCE',
    'MOVE_SUNNY_DAY',
    'MOVE_CRUNCH',
    'MOVE_MIRROR_COAT',
    'MOVE_PSYCH_UP',
    'MOVE_EXTREME_SPEED',
    'MOVE_ANCIENT_POWER',
    'MOVE_SHADOW_BALL',
    'MOVE_FUTURE_SIGHT',
    'MOVE_ROCK_SMASH',
    'MOVE_WHIRLPOOL',
    'MOVE_BEAT_UP',
    'MOVE_FAKE_OUT',
    'MOVE_UPROAR',
    'MOVE_STOCKPILE',
    'MOVE_SPIT_UP',
    'MOVE_SWALLOW',
    'MOVE_HEAT_WAVE',
    'MOVE_HAIL',
    'MOVE_TORMENT',
    'MOVE_FLATTER',
    'MOVE_WILL_O_WISP',
    'MOVE_MEMENTO',
    'MOVE_FACADE',
    'MOVE_FOCUS_PUNCH',
    'MOVE_SMELLING_SALTS',
    'MOVE_FOLLOW_ME',
    'MOVE_NATURE_POWER',
    'MOVE_CHARGE',
    'MOVE_TAUNT',
    'MOVE_HELPING_HAND',
    'MOVE_TRICK',
    'MOVE_ROLE_PLAY',
    'MOVE_WISH',
    'MOVE_ASSIST',
    'MOVE_INGRAIN',
    'MOVE_SUPERPOWER',
    'MOVE_MAGIC_COAT',
    'MOVE_RECYCLE',
    'MOVE_REVENGE',
    'MOVE_BRICK_BREAK',
    'MOVE_YAWN',
    'MOVE_KNOCK_OFF',
    'MOVE_ENDEAVOR',
    'MOVE_ERUPTION',
    'MOVE_SKILL_SWAP',
    'MOVE_IMPRISON',
    'MOVE_REFRESH',
    'MOVE_GRUDGE',
    'MOVE_SNATCH',
    'MOVE_SECRET_POWER',
    'MOVE_DIVE',
    'MOVE_ARM_THRUST',
    'MOVE_CAMOUFLAGE',
    'MOVE_TAIL_GLOW',
    'MOVE_LUSTER_PURGE',
    'MOVE_MIST_BALL',
    'MOVE_FEATHER_DANCE',
    'MOVE_TEETER_DANCE',
    'MOVE_BLAZE_KICK',
    'MOVE_MUD_SPORT',
    'MOVE_ICE_BALL',
    'MOVE_NEEDLE_ARM',
    'MOVE_SLACK_OFF',
    'MOVE_HYPER_VOICE',
    'MOVE_POISON_FANG',
    'MOVE_CRUSH_CLAW',
    'MOVE_BLAST_BURN',
    'MOVE_HYDRO_CANNON',
    'MOVE_METEOR_MASH',
    'MOVE_ASTONISH',
    'MOVE_WEATHER_BALL',
    'MOVE_AROMATHERAPY',
    'MOVE_FAKE_TEARS',
    'MOVE_AIR_CUTTER',
    'MOVE_OVERHEAT',
    'MOVE_ODOR_SLEUTH',
    'MOVE_ROCK_TOMB',
    'MOVE_SILVER_WIND',
    'MOVE_METAL_SOUND',
    'MOVE_GRASS_WHISTLE',
    'MOVE_TICKLE',
    'MOVE_COSMIC_POWER',
    'MOVE_WATER_SPOUT',
    'MOVE_SIGNAL_BEAM',
    'MOVE_SHADOW_PUNCH',
    'MOVE_EXTRASENSORY',
    'MOVE_SKY_UPPERCUT',
    'MOVE_SAND_TOMB',
    'MOVE_SHEER_COLD',
    'MOVE_MUDDY_WATER',
    'MOVE_BULLET_SEED',
    'MOVE_AERIAL_ACE',
    'MOVE_ICICLE_SPEAR',
    'MOVE_IRON_DEFENSE',
    'MOVE_BLOCK',
    'MOVE_HOWL',
    'MOVE_DRAGON_CLAW',
    'MOVE_FRENZY_PLANT',
    'MOVE_BULK_UP',
    'MOVE_BOUNCE',
    'MOVE_MUD_SHOT',
    'MOVE_POISON_TAIL',
    'MOVE_COVET',
    'MOVE_VOLT_TACKLE',
    'MOVE_MAGICAL_LEAF',
    'MOVE_WATER_SPORT',
    'MOVE_CALM_MIND',
    'MOVE_LEAF_BLADE',
    'MOVE_DRAGON_DANCE',
    'MOVE_ROCK_BLAST',
    'MOVE_SHOCK_WAVE',
    'MOVE_WATER_PULSE',
    'MOVE_DOOM_DESIRE',
    'MOVE_PSYCHO_BOOST',
    'MOVE_ROOST',
    'MOVE_GRAVITY',
    'MOVE_MIRACLE_EYE',
    'MOVE_WAKE_UP_SLAP',
    'MOVE_HAMMER_ARM',
    'MOVE_GYRO_BALL',
    'MOVE_HEALING_WISH',
    'MOVE_BRINE',
    'MOVE_NATURAL_GIFT',
    'MOVE_FEINT',
    'MOVE_PLUCK',
    'MOVE_TAILWIND',
    'MOVE_ACUPRESSURE',
    'MOVE_METAL_BURST',
    'MOVE_U_TURN',
    'MOVE_CLOSE_COMBAT',
    'MOVE_PAYBACK',
    'MOVE_ASSURANCE',
    'MOVE_EMBARGO',
    'MOVE_FLING',
    'MOVE_PSYCHO_SHIFT',
    'MOVE_TRUMP_CARD',
    'MOVE_HEAL_BLOCK',
    'MOVE_WRING_OUT',
    'MOVE_POWER_TRICK',
    'MOVE_GASTRO_ACID',
    'MOVE_LUCKY_CHANT',
    'MOVE_ME_FIRST',
    'MOVE_COPYCAT',
    'MOVE_POWER_SWAP',
    'MOVE_GUARD_SWAP',
    'MOVE_PUNISHMENT',
    'LAGGING_TAIL_RESORT',
    'MOVE_WORRY_SEED',
    'MOVE_SUCKER_PUNCH',
    'MOVE_TOXIC_SPIKES',
    'MOVE_HEART_SWAP',
    'MOVE_AQUA_RING',
    'MOVE_MAGNET_RISE',
    'MOVE_FLARE_BLITZ',
    'MOVE_FORCE_PALM',
    'MOVE_AURA_SPHERE',
    'MOVE_ROCK_POLISH',
    'MOVE_POISON_JAB',
    'MOVE_DARK_PULSE',
    'MOVE_NIGHT_SLASH',
    'MOVE_AQUA_TAIL',
    'MOVE_SEED_BOMB',
    'MOVE_AIR_SLASH',
    'MOVE_X_SCISSOR',
    'MOVE_BUG_BUZZ',
    'MOVE_DRAGON_PULSE',
    'MOVE_DRAGON_RUSH',
    'MOVE_POWER_GEM',
    'MOVE_DRAIN_PUNCH',
    'MOVE_VACUUM_WAVE',
    'MOVE_FOCUS_BLAST',
    'MOVE_ENERGY_BALL',
    'MOVE_BRAVE_BIRD',
    'MOVE_EARTH_POWER',
    'MOVE_SWITCHEROO',
    'MOVE_GIGA_IMPACT',
    'MOVE_NASTY_PLOT',
    'MOVE_BULLET_PUNCH',
    'MOVE_AVALANCHE',
    'MOVE_ICE_SHARD',
    'MOVE_SHADOW_CLAW',
    'MOVE_THUNDER_FANG',
    'MOVE_ICE_FANG',
    'MOVE_FIRE_FANG',
    'MOVE_SHADOW_SNEAK',
    'MOVE_MUD_BOMB',
    'MOVE_PSYCHO_CUT',
    'MOVE_ZEN_HEADBUTT',
    'MOVE_MIRROR_SHOT',
    'MOVE_FLASH_CANNON',
    'MOVE_ROCK_CLIMB',
    'MOVE_DEFOG',
    'MOVE_TRICK_ROOM',
    'MOVE_DRACO_METEOR',
    'MOVE_DISCHARGE',
    'MOVE_LAVA_PLUME',
    'MOVE_LEAF_STORM',
    'MOVE_POWER_WHIP',
    'MOVE_ROCK_WRECKER',
    'MOVE_CROSS_POISON',
    'MOVE_GUNK_SHOT',
    'MOVE_IRON_HEAD',
    'MOVE_MAGNET_BOMB',
    'MOVE_STONE_EDGE',
    'MOVE_CAPTIVATE',
    'MOVE_STEALTH_ROCK',
    'MOVE_GRASS_KNOT',
    'MOVE_CHATTER',
    'MOVE_JUDGMENT',
    'MOVE_BUG_BITE',
    'MOVE_CHARGE_BEAM',
    'MOVE_WOOD_HAMMER',
    'MOVE_AQUA_JET',
    'MOVE_ATTACK_ORDER',
    'MOVE_DEFEND_ORDER',
    'MOVE_HEAL_ORDER',
    'MOVE_HEAD_SMASH',
    'MOVE_DOUBLE_HIT',
    'MOVE_ROAR_OF_TIME',
    'MOVE_SPACIAL_REND',
    'MOVE_LUNAR_DANCE',
    'MOVE_CRUSH_GRIP',
    'MOVE_MAGMA_STORM',
    'MOVE_DARK_VOID',
    'MOVE_SEED_FLARE',
    'MOVE_OMINOUS_WIND',
    'MOVE_SHADOW_FORCE',
]

MOVE_ID_PARAMS = {
    'CheckHit': 2,   
}

ITEM_HOLD_EFFECT_CONSTS = [
    'HOLD_EFFECT_NONE',
    'HOLD_EFFECT_RESTORE_HP',
    'HOLD_EFFECT_GRISEOUS_ORB',
    'HOLD_EFFECT_ADAMANT_ORB',
    'HOLD_EFFECT_LUSTROUS_ORB',
    'HOLD_EFFECT_CURE_PRZ',
    'HOLD_EFFECT_CURE_SLP',
    'HOLD_EFFECT_CURE_PSN',
    'HOLD_EFFECT_CURE_BRN',
    'HOLD_EFFECT_CURE_FRZ',
    'HOLD_EFFECT_RESTORE_PP',
    'HOLD_EFFECT_CURE_CNF',
    'HOLD_EFFECT_CURE_ALL',
    'HOLD_EFFECT_RESTORE_PERCENT_HP',
    'HOLD_EFFECT_RESTORE_PERCENT_HP_SPICY',
    'HOLD_EFFECT_RESTORE_PERCENT_HP_DRY',
    'HOLD_EFFECT_RESTORE_PERCENT_HP_SWEET',
    'HOLD_EFFECT_RESTORE_PERCENT_HP_BITTER',
    'HOLD_EFFECT_RESTORE_PERCENT_HP_SOUR',
    'HOLD_EFFECT_WEAKEN_SE_FIRE',
    'HOLD_EFFECT_WEAKEN_SE_WATER',
    'HOLD_EFFECT_WEAKEN_SE_ELECTRIC',
    'HOLD_EFFECT_WEAKEN_SE_GRASS',
    'HOLD_EFFECT_WEAKEN_SE_ICE',
    'HOLD_EFFECT_WEAKEN_SE_FIGHTING',
    'HOLD_EFFECT_WEAKEN_SE_POISON',
    'HOLD_EFFECT_WEAKEN_SE_GROUND',
    'HOLD_EFFECT_WEAKEN_SE_FLYING',
    'HOLD_EFFECT_WEAKEN_SE_PSYCHIC',
    'HOLD_EFFECT_WEAKEN_SE_BUG',
    'HOLD_EFFECT_WEAKEN_SE_ROCK',
    'HOLD_EFFECT_WEAKEN_SE_GHOST',
    'HOLD_EFFECT_WEAKEN_SE_DRAGON',
    'HOLD_EFFECT_WEAKEN_SE_DARK',
    'HOLD_EFFECT_WEAKEN_SE_STEEL',
    'HOLD_EFFECT_WEAKEN_NORMAL',
    'HOLD_EFFECT_PINCH_BOOST_ATTACK',
    'HOLD_EFFECT_PINCH_BOOST_DEFENSE',
    'HOLD_EFFECT_PINCH_BOOST_SPEED',
    'HOLD_EFFECT_PINCH_BOOST_SPATK',
    'HOLD_EFFECT_PINCH_BOOST_SPDEF',
    'HOLD_EFFECT_PINCH_BOOST_CRIT',
    'HOLD_EFFECT_PINCH_DOUBLE_BOOST_RANDOM',
    'HOLD_EFFECT_RESTORE_HP_ON_SE',
    'HOLD_EFFECT_PINCH_WIDE_LENS_ON_NEXT',
    'HOLD_EFFECT_PINCH_MOVE_FIRST',
    'HOLD_EFFECT_RECOIL_PHYSICAL',
    'HOLD_EFFECT_RECOIL_SPECIAL',
    'HOLD_EFFECT_REDUCE_ACCURACY',
    'HOLD_EFFECT_WHITE_HERB',
    'HOLD_EFFECT_DOUBLE_EV_GAIN',
    'HOLD_EFFECT_EXP_SHARE',
    'HOLD_EFFECT_QUICK_CLAW',
    'HOLD_EFFECT_FRIENDSHIP_UP',
    'HOLD_EFFECT_MENTAL_HERB',
    'HOLD_EFFECT_CHOICE_BAND',
    'HOLD_EFFECT_KINGS_ROCK',
    'HOLD_EFFECT_BOOST_BUG',
    'HOLD_EFFECT_DOUBLE_PRIZE_MONEY',
    'HOLD_EFFECT_REDUCE_ENCOUNTER_RATE',
    'HOLD_EFFECT_SOUL_DEW',
    'HOLD_EFFECT_DEEP_SEA_TOOTH',
    'HOLD_EFFECT_DEEP_SEA_SCALE',
    'HOLD_EFFECT_ESCAPE_ENCOUNTER',
    'HOLD_EFFECT_NO_EVOLUTION',
    'HOLD_EFFECT_FOCUS_BAND',
    'HOLD_EFFECT_INCREASE_EXP_GAIN',
    'HOLD_EFFECT_SCOPE_LENS',
    'HOLD_EFFECT_BOOST_STEEL',
    'HOLD_EFFECT_LEFTOVERS',
    'HOLD_EFFECT_EVOLVE_SEADRA',
    'HOLD_EFFECT_LIGHT_BALL',
    'HOLD_EFFECT_BOOST_GROUND',
    'HOLD_EFFECT_BOOST_ROCK',
    'HOLD_EFFECT_BOOST_GRASS',
    'HOLD_EFFECT_BOOST_DARK',
    'HOLD_EFFECT_BOOST_FIGHTING',
    'HOLD_EFFECT_BOOST_ELECTRIC',
    'HOLD_EFFECT_BOOST_WATER',
    'HOLD_EFFECT_BOOST_FLYING',
    'HOLD_EFFECT_BOOST_POISON',
    'HOLD_EFFECT_BOOST_ICE',
    'HOLD_EFFECT_BOOST_GHOST',
    'HOLD_EFFECT_BOOST_PSYCHIC',
    'HOLD_EFFECT_BOOST_FIRE',
    'HOLD_EFFECT_BOOST_DRAGON',
    'HOLD_EFFECT_BOOST_NORMAL',
    'HOLD_EFFECT_EVOLVE_PORYGON',
    'HOLD_EFFECT_SHELL_BELL',
    'HOLD_EFFECT_LUCKY_PUNCH',
    'HOLD_EFFECT_METAL_POWDER',
    'HOLD_EFFECT_THICK_CLUB',
    'HOLD_EFFECT_LEEK',
    'HOLD_EFFECT_WIDE_LENS',
    'HOLD_EFFECT_MUSCLE_BAND',
    'HOLD_EFFECT_WISE_GLASSES',
    'HOLD_EFFECT_EXPERT_BELT',
    'HOLD_EFFECT_LIGHT_CLAY',
    'HOLD_EFFECT_LIFE_ORB',
    'HOLD_EFFECT_POWER_HERB',
    'HOLD_EFFECT_TOXIC_ORB',
    'HOLD_EFFECT_FLAME_ORB',
    'HOLD_EFFECT_QUICK_POWDER',
    'HOLD_EFFECT_FOCUS_SASH',
    'HOLD_EFFECT_ZOOM_LENS',
    'HOLD_EFFECT_METRONOME',
    'HOLD_EFFECT_IRON_BALL',
    'HOLD_EFFECT_LAGGING_TAIL',
    'HOLD_EFFECT_DESTINY_KNOT',
    'HOLD_EFFECT_BLACK_SLUDGE',
    'HOLD_EFFECT_EXTEND_HAIL',
    'HOLD_EFFECT_EXTEND_SANDSTORM',
    'HOLD_EFFECT_EXTEND_SUN',
    'HOLD_EFFECT_EXTEND_RAIN',
    'HOLD_EFFECT_EXTEND_TRAPPING',
    'HOLD_EFFECT_CHOICE_SCARF',
    'HOLD_EFFECT_STICKY_BARB',
    'HOLD_EFFECT_GAIN_ATK_EVS',
    'HOLD_EFFECT_GAIN_DEF_EVS',
    'HOLD_EFFECT_GAIN_SPA_EVS',
    'HOLD_EFFECT_GAIN_SPD_EVS',
    'HOLD_EFFECT_GAIN_SPE_EVS',
    'HOLD_EFFECT_GAIN_HP_EVS',
    'HOLD_EFFECT_SHED_SHELL',
    'HOLD_EFFECT_BIG_ROOT',
    'HOLD_EFFECT_CHOICE_SPECS',
    'HOLD_EFFECT_BOOST_FIRE_PLATE',
    'HOLD_EFFECT_BOOST_WATER_PLATE',
    'HOLD_EFFECT_BOOST_ELECTRIC_PLATE',
    'HOLD_EFFECT_BOOST_GRASS_PLATE',
    'HOLD_EFFECT_BOOST_ICE_PLATE',
    'HOLD_EFFECT_BOOST_FIGHTING_PLATE',
    'HOLD_EFFECT_BOOST_POISON_PLATE',
    'HOLD_EFFECT_BOOST_GROUND_PLATE',
    'HOLD_EFFECT_BOOST_FLYING_PLATE',
    'HOLD_EFFECT_BOOST_PSYCHIC_PLATE',
    'HOLD_EFFECT_BOOST_BUG_PLATE',
    'HOLD_EFFECT_BOOST_ROCK_PLATE',
    'HOLD_EFFECT_BOOST_GHOST_PLATE',
    'HOLD_EFFECT_BOOST_DRAGON_PLATE',
    'HOLD_EFFECT_BOOST_DARK_PLATE',
    'HOLD_EFFECT_BOOST_STEEL_PLATE',
    'HOLD_EFFECT_EVOLVE_RHYDON',
    'HOLD_EFFECT_EVOLVE_ELECTABUZZ',
    'HOLD_EFFECT_EVOLVE_MAGMAR',
    'HOLD_EFFECT_EVOLVE_PORYGON2',
    'HOLD_EFFECT_EVOLVE_DUSKNOIR',
]

ITEM_HOLD_EFFECT_PARAMS = {
    'CheckItemEffect': 2,
}

MOVE_PARAM_CONSTS = [
    'MOVE_PARAM_EFFECT',
    'MOVE_PARAM_PSS',
    'MOVE_PARAM_POWER',
    'MOVE_PARAM_TYPE',
    'MOVE_PARAM_HIT_RATE',
    'MOVE_PARAM_PP',
    'MOVE_PARAM_EFFECT_CHANCE',
    'MOVE_PARAM_RANGE',
    'MOVE_PARAM_PRIORITY',
    'MOVE_PARAM_FLAGS',
    'MOVE_PARAM_CONTEST_APPEAL',
    'MOVE_PARAM_CONTEST_TYPE',
]

MOVE_PARAM_PARAMS = {
    'GetCurrentMoveData': 0,
}

def translate(cmd: str, raw_params: list[int], translated: list[str], params_mapping: dict, consts_mapping) -> list[str]:
    new_translated = translated
    if cmd in params_mapping:
        maybe_slots = params_mapping[cmd]
        if isinstance(maybe_slots, list):
            for slot in maybe_slots:
                raw_param = raw_params[slot]
                mapped_const = consts_mapping[raw_param]
                new_translated[slot] = mapped_const
        else:
            raw_param = raw_params[maybe_slots]
            mapped_const = consts_mapping[raw_param]
            new_translated[maybe_slots] = mapped_const

    return new_translated

def translate_tags(cmd: str, raw_params: list[int], translated: list[str]) -> list[str]:
    if cmd == 'MessageWithBattler':
        tag_i = 2
    else:
        tag_i = 1

    tag = raw_params[tag_i]
    if tag == 0:
        addl_param_count = 0
    elif tag < 9:
        addl_param_count = 1
    elif tag < 31:
        addl_param_count = 2
    elif tag < 52:
        addl_param_count = 3
    elif tag < 60:
        addl_param_count = 4
    else:
        addl_param_count = 6
    
    for i in range(addl_param_count):
        translated[i + tag_i + 1] = BATTLER_CONSTS[raw_params[i + tag_i + 1]]
    
    # the macro always takes 8 params; fill out any that are missing with "NaN"
    for i in range(addl_param_count, 6):
        translated.append('NaN')
    
    return translated


def translate_params(cmd: str, params: list[int]) -> list[str]:
    translated = [str(p) for p in params]
    translated = translate(cmd, params, translated, BATTLER_PARAMS, BATTLER_CONSTS)
    translated = translate(cmd, params, translated, MODE_PARAMS, MODE_CONSTS)
    translated = translate(cmd, params, translated, OPERATOR_PARAMS, OPERATOR_CONSTS)
    translated = translate(cmd, params, translated, CONDITION_PARAMS, OPERATOR_CONSTS)
    translated = translate(cmd, params, translated, VARIABLE_PARAMS, VARIABLE_CONSTS)
    translated = translate(cmd, params, translated, OTF_PARAMS, OTF_CONSTS)
    translated = translate(cmd, params, translated, SIDE_CONDITION_MODE_PARAMS, SIDE_CONDITION_MODE_CONSTS)
    translated = translate(cmd, params, translated, SIDE_CONDITION_PARAMS, SIDE_CONDITION_CONSTS)
    translated = translate(cmd, params, translated, YES_NO_BOX_PARAMS, YES_NO_BOX_CONSTS)
    translated = translate(cmd, params, translated, THROW_PARAMS, THROW_CONSTS)
    translated = translate(cmd, params, translated, POS_PARAMS, POS_CONSTS)
    translated = translate(cmd, params, translated, TAG_PARAMS, TAG_CONSTS)
    translated = translate(cmd, params, translated, CAPTURE_PARAMS, CAPTURE_CONSTS)
    translated = translate(cmd, params, translated, MULTI_HIT_PARAMS, MULTI_HIT_CONSTS)
    translated = translate(cmd, params, translated, BATTLE_MON_PARAMS, BATTLE_MON_CONSTS)
    translated = translate(cmd, params, translated, ABILITY_PARAMS, ABILITY_CONSTS)
    translated = translate(cmd, params, translated, STATUS_PARAMS, STATUS_CONSTS)
    translated = translate(cmd, params, translated, TRAINER_MESSAGE_PARAMS, TRAINER_MESSAGE_CONSTS)
    translated = translate(cmd, params, translated, MOVE_ID_PARAMS, MOVE_ID_CONSTS)
    translated = translate(cmd, params, translated, ITEM_HOLD_EFFECT_PARAMS, ITEM_HOLD_EFFECT_CONSTS)
    translated = translate(cmd, params, translated, MOVE_PARAM_PARAMS, MOVE_PARAM_CONSTS)

    if cmd in ['Message', 'MessageNoBattler', 'PrepareMessage', 'MessageWithBattler']:
        translated = translate_tags(cmd, params, translated)

    return translated

def decompile(data: bytes, index: int, prefix: str, dump_dir: str, pl_prefix: str) -> str:
    output_cmds = []
    words = iter(data[i:i+4] for i in range(0, len(data), 4))
    for word in words:
        cmd = CMD_DICT[int.from_bytes(word, 'little')]
        params = []
        for _ in range(cmd.params):
            params.append(int.from_bytes(next(words), 'little'))

        if cmd.name in ['Message', 'MessageNoBattler', 'PrepareMessage', 'MessageWithBattler']:
            if params[-1] == 0:
                addl_param_count = 0
            elif params[-1] < 9:
                addl_param_count = 1
            elif params[-1] < 31:
                addl_param_count = 2
            elif params[-1] < 52:
                addl_param_count = 3
            elif params[-1] < 60:
                addl_param_count = 4
            else:
                addl_param_count = 6
            
            for _ in range(addl_param_count):
                params.append(int.from_bytes(next(words), 'little'))
        
        str_params = translate_params(cmd.name, params)
        output_cmds.append(CMD_TEMPLATE.format(command=cmd.name.ljust(35, ' '), params=', '.join(str_params)))
    
    return DECOMP_TEMPLATE.format(index=index, commands='\n'.join(output_cmds), prefix=prefix, dump_folder=dump_dir, pl_prefix=pl_prefix)


def dump_narc(narc_path: str, prefix: str, dump_path: str, pl_prefix: str):
    if not path.isdir(dump_path):
        makedirs(dump_path)

    narc = NARC.fromFile(narc_path)
    for i in range(len(narc.files)):
        dump = path.basename(dump_path)
        name = path.join(dump_path, f'{prefix}_{i:03}.s')
        data = narc.files[i]
        dcmp = decompile(data, i, prefix, dump, pl_prefix)
        with open(name, 'w') as out:
            out.write(dcmp)

def dump_all():
    dump_narc('base/data/battle/skill/be_seq.narc',   'effscr', 'armips/asm/battle/effscr', 'be_seq')
    dump_narc('base/data/battle/skill/sub_seq.narc',  'subscr', 'armips/asm/battle/subscr', 'sub_seq')
    dump_narc('base/data/battle/skill/waza_seq.narc', 'movscr', 'armips/asm/battle/movscr', 'waza_seq')

if __name__ == '__main__':
    dump_all()

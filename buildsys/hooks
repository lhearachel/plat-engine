# hooks jumps from the code to your code, overwriting 8-10 bytes of code to do so.  an example:
#
#   0002 AddWildPartyPokemon_hook 080029E0 5
#
# this opens up overlay 2, jumps to file offset 0x29E0, and assembles this at that offset:
#
#   ldr r5, =AddWildPartyPokemon_hook|1 // (|1 only if in thumb mode)
#   bx r5
#   .pool
#
# you can link directly to c code if there is a free register to do so.  the standard for arm
# assembly specifies that r0-r3 are arguments to a function and are not preserved across function
# calls, so if your function has less than 4 arguments, you can use r3 as a hook register and
# replace the entire thing
# 
# otherwise you have to link to a "hook" to the c code where you write custom assembly to make
# the game feel okay about what it's doing

arm9 Overlay_LoadWithExtension 08006590 2
arm9 Overlay_Unload 08006514 1

arm9 Summary_IVEV 0808CA20 1
arm9 Summary_Entry_Hook 08090A3A 1

#arm9 Pokemon_OverworldPoisonDamage 08054B04 2

#0016 ClientCommand_Main 0225C0DC 2
0016 BattleScrCmd_Exec 022405FC 2

0016 Calc_MoveDamage 02241374 2
0016 Calc_Critical 0225AEE4 2

# Stealth Rock and switch AI call into the new type table
0016 Calc_TypeEffectivenessPower 022558CC 3

# On-Hit Checks for Ability Effects
0016 Server_CheckAbilityOnHit 0225708C 3
0016 BattleScrCmd_CheckLeaveWith1HP 02248660 2
0016 Server_CheckExtraFlinch 022512F8 2
0016 Server_CheckAbilityDamageOverride 02256148 3
0016 Server_CheckEndOfTurnAbility 022562E8 3
0016 Server_CheckSwitchInEffects 02256414 2
0016 BattleScrCmd_StatBoostChange 02242400 2

# Forms
arm9 BoxPokemon_Form 02079E44 1
arm9 Pokemon_IconGraphicsID 02079D8C 3
#arm9 Pokemon_IconPaletteID 02079EDC 3
arm9 Form_GetTrueSpecies 02078740 2
## Sprites and Icons
arm9 Pokemon_LoadSprite 02075FBC 1
arm9 Pokemon_LoadIconPalette 02079EDC 2